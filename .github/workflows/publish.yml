name: Publish

on:
  push:
    branches: [ main ]
    paths-ignore: [ README.md ]

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        schema:
          - { name: inntekter, github-package-id: 1271858 }
          - { name: manuell, github-package-id: 1271715 }
          - { name: medlem, github-package-id: 1262528 }
          - { name: sokere, github-package-id: 1271717 }
    steps:
      - name: Checkout with history
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Compare ${{ matrix.schema.name }} with last commit
        uses: tj-actions/changed-files@v17
        id: changes
        with:
          files: ${{ matrix.schema.name }}/*

      - name: Create the next git tag for ${{ matrix.schema.name }}
        if: steps.changes.outputs.any_changed == 'false' && steps.changes.outputs.any_deleted == 'false'
        uses: paulhatch/semantic-version@v4.0.3
        id: next_tag
        with:
          bump_each_commit: true
          tag_prefix: ""
          change_path: ${{ matrix.schema.name }}
          namespace: ${{ matrix.schema.name }}

      - name: Remove suffix from tag ${{ steps.next_tag.outputs.version }}
        if: steps.changes.outputs.any_changed == 'false' && steps.changes.outputs.any_deleted == 'false'
        run: echo "semver=$(echo ${next_tag%"$suffix"})" >> $GITHUB_ENV
        env:
          suffix: -${{ matrix.schema.name }}
          next_tag: ${{ steps.next_tag.outputs.version }}

      - name: Assemble ${{ matrix.schema.name }}
        if: steps.changes.outputs.any_changed == 'false' && steps.changes.outputs.any_deleted == 'false'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ matrix.schema.name }}:assemble

      - name: Push tag ${{ steps.next_tag.outputs.version }}
        if: steps.changes.outputs.any_changed == 'false' && steps.changes.outputs.any_deleted == 'false'
        run: |
          git config --local user.name ${{ github.actor }}
          git tag "${{ steps.next_tag.outputs.version }}"
          git pull --rebase
          git push --force-with-lease --tags

      - name: Publish ${{ matrix.schema.name }}
        if: steps.changes.outputs.any_changed == 'false' && steps.changes.outputs.any_deleted == 'false'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ matrix.schema.name }}:publish -Pversion=${{ env.semver }} --no-daemon
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}

      - name: Update ${{ matrix.schema.name }} version badge in README.md
        if: steps.changes.outputs.any_changed == 'false' && steps.changes.outputs.any_deleted == 'false'
        shell: bash
        run: |
          BADGE_TEMPLATE="[![Generic badge](https://img.shields.io/badge/${{ matrix.schema.name }}-%s-blue.svg)](https://github.com/navikt/aap-avro/packages/${{ matrix.schema.github-package-id }}}?version=%s)"
          BADGE=$(printf "$BADGE_TEMPLATE" "${{ env.semver }}" "${{ env.semver }}")
          sed -i -e "s|.*${{ matrix.schema.name }}-.*-blue.svg.*|$BADGE|g" README.md

          EXAMPLE_TEMPLATE="implementation(\"no.nav.aap.avro:${{ matrix.schema.name }}:%s\")"
          EXAMPLE=$(printf "$EXAMPLE_TEMPLATE" "${{ env.semver }}")
          sed -i -e "s|implementation.*${{ matrix.schema.name }}.*|$EXAMPLE|g" README.md

          git add README.md
          git commit -m "Update version badges"
          git pull --rebase
          git push --force-with-lease